(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),c=t.n(i)()(r());c.push([n.id,'body {\n  margin: 20px 80px;\n  font-family: "Source Sans 3", sans-serif;\n  font-weight: 600;\n  background-color: rgb(220, 247, 234);\n}\n\n.header {\n  display: flex;\n  height: 100px;\n  font-size: 46px;\n  color: rgb(0, 93, 84);\n  /* font-family: "Neucha", cursive; */\n  align-items: center;\n}\n\n.container {\n  display: flex;\n}\n\n.projects {\n  flex-direction: column;\n  width: 30%;\n  background-color: rgb(114, 237, 216);\n  padding: 40px;\n}\n\n.todos {\n  flex-direction: column;\n  width: 70%;\n  background-color: rgb(186, 237, 114);\n  padding: 40px;\n}\n\ninput {\n  border: none;\n  border-radius: 4px;\n}\n\n.new-project-invisible {\n  display: none;\n}\n\n.new-todo-invisible {\n  display: none;\n}\n\n.new-project-button,\n.new-todo-button {\n  height: 30px;\n  width: 30px;\n  border: none;\n  font-family: sans-serif;\n  font-size: 18px;\n  font-weight: 100;\n}\n\n.new-project-button,\n.delete-project-button {\n  background-color: rgb(114, 237, 216);\n}\n\n.new-todo-button,\n.delete-todo-button {\n  background-color: rgb(186, 237, 114);\n}\n\n.delete-project-button,\n.delete-todo-button {\n  width: 20px;\n  height: 20px;\n  border: none;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,wCAAwC;EACxC,gBAAgB;EAChB,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,aAAa;EACb,eAAe;EACf,qBAAqB;EACrB,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,sBAAsB;EACtB,UAAU;EACV,oCAAoC;EACpC,aAAa;AACf;;AAEA;EACE,sBAAsB;EACtB,UAAU;EACV,oCAAoC;EACpC,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,eAAe;EACf,gBAAgB;AAClB;;AAEA;;EAEE,oCAAoC;AACtC;;AAEA;;EAEE,oCAAoC;AACtC;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,YAAY;AACd",sourcesContent:['body {\n  margin: 20px 80px;\n  font-family: "Source Sans 3", sans-serif;\n  font-weight: 600;\n  background-color: rgb(220, 247, 234);\n}\n\n.header {\n  display: flex;\n  height: 100px;\n  font-size: 46px;\n  color: rgb(0, 93, 84);\n  /* font-family: "Neucha", cursive; */\n  align-items: center;\n}\n\n.container {\n  display: flex;\n}\n\n.projects {\n  flex-direction: column;\n  width: 30%;\n  background-color: rgb(114, 237, 216);\n  padding: 40px;\n}\n\n.todos {\n  flex-direction: column;\n  width: 70%;\n  background-color: rgb(186, 237, 114);\n  padding: 40px;\n}\n\ninput {\n  border: none;\n  border-radius: 4px;\n}\n\n.new-project-invisible {\n  display: none;\n}\n\n.new-todo-invisible {\n  display: none;\n}\n\n.new-project-button,\n.new-todo-button {\n  height: 30px;\n  width: 30px;\n  border: none;\n  font-family: sans-serif;\n  font-size: 18px;\n  font-weight: 100;\n}\n\n.new-project-button,\n.delete-project-button {\n  background-color: rgb(114, 237, 216);\n}\n\n.new-todo-button,\n.delete-todo-button {\n  background-color: rgb(186, 237, 114);\n}\n\n.delete-project-button,\n.delete-todo-button {\n  width: 20px;\n  height: 20px;\n  border: none;\n}\n'],sourceRoot:""}]);const a=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(c[s]=!0)}for(var d=0;d<n.length;d++){var u=[].concat(n[d]);o&&c[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),e.push(u))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},c=[],a=0;a<n.length;a++){var s=n[a],d=o.base?s[0]+o.base:s[0],u=i[d]||0,l="".concat(d," ").concat(u);i[d]=u+1;var A=t(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var f=r(p,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:f,references:1})}c.push(l)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<i.length;c++){var a=t(i[c]);e[a].references--}for(var s=o(n,r),d=0;d<i.length;d++){var u=t(i[d]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),c=t.n(i),a=t(565),s=t.n(a),d=t(216),u=t.n(d),l=t(589),A=t.n(l),p=t(426),f={};f.styleTagTransform=A(),f.setAttributes=s(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=u(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;class b{constructor(n,e,t,o,r){this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.isComplete=r}}class m{constructor(n){this.title=n}}let v=[],C=[];const h=document.querySelector(".todos"),E=document.querySelector(".projects"),g=document.querySelector(".new-project"),y=document.querySelector(".new-todo"),x=document.querySelectorAll("input"),w=document.querySelector(".new-project-button");function j(){for(let n=0;n<C.length;n++){const e=document.createElement("div");e.classList.add("project-item"),e.dataset.index=`${n}`,e.textContent=C[n].title,E.appendChild(e);const t=document.createElement("button");t.classList.add("delete-project-button"),t.textContent="🗑️",e.appendChild(t),t.addEventListener("click",(()=>{const n=e.dataset.index;var t;t=n,C=C.filter((function(n){return n!==C[t]})),e.textContent=""}))}}function B(){for(let n=0;n<v.length;n++){const e=document.createElement("div");e.classList.add("todo-item"),e.dataset.index=`${n}`,e.textContent=v[n].title,h.appendChild(e);const t=document.createElement("button");t.classList.add("delete-todo-button"),t.textContent="🗑️",e.appendChild(t),t.addEventListener("click",(()=>{const n=e.dataset.index;var t;t=n,v=v.filter((function(n){return n!==v[t]})),e.textContent=""}))}}document.querySelector(".new-todo-button").addEventListener("click",(()=>{y.classList.remove("new-todo-invisible")})),w.addEventListener("click",(()=>{g.classList.remove("new-project-invisible")})),g.addEventListener("submit",(function(n){n.preventDefault();const e=document.querySelector(".project-title").value,t=document.createElement("div");if(t.classList.add("project-item"),""!==e){E.appendChild(t),function(n){const e=new m(n);C.push(e)}(e);for(let n=0;n<x.length;n++)x[n].value="";g.classList.add("new-project-invisible"),j()}})),y.addEventListener("submit",(function(n){n.preventDefault();const e=document.querySelector(".todo-title").value,t=document.querySelector(".todo-description").value,o=document.querySelector(".todo-due-date").value,r=document.querySelector("#todo-priority").checked,i=document.createElement("div");if(i.classList.add("todo-item"),""!==e){h.appendChild(i),function(n,e,t,o,r){const i=new b(n,e,t,o,void 0);v.push(i)}(e,t,o,r);for(let n=0;n<x.length;n++)x[n].value="";y.classList.add("new-todo-invisible"),B()}})),B(),j()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,