(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),c=t.n(i)()(r());c.push([n.id,'body {\n  margin: 20px 80px;\n  font-family: "Source Sans 3", sans-serif;\n  font-weight: 600;\n  background-color: rgb(220, 247, 234);\n}\n\n.header {\n  display: flex;\n  height: 100px;\n  font-size: 46px;\n  align-items: center;\n}\n\n.container {\n  display: flex;\n}\n\n.projects {\n  flex-direction: column;\n  width: 30%;\n  background-color: rgb(114, 237, 216);\n  padding: 40px;\n}\n\n.todos {\n  flex-direction: column;\n  width: 70%;\n  background-color: rgb(186, 237, 114);\n  padding: 40px;\n}\n\ninput {\n  border: none;\n  border-radius: 4px;\n}\n\n.new-project-invisible {\n  display: none;\n}\n\n.new-todo-invisible {\n  display: none;\n}\n\n.new-project-button,\n.new-todo-button {\n  height: 30px;\n  width: 30px;\n  border: none;\n  font-family: sans-serif;\n  font-size: 18px;\n  font-weight: 100;\n}\n\n.new-project-button,\n.delete-project-button {\n  background-color: rgb(114, 237, 216);\n}\n\n.new-todo-button,\n.delete-todo-button {\n  background-color: rgb(186, 237, 114);\n}\n\n.delete-project-button,\n.delete-todo-button {\n  width: 20px;\n  height: 20px;\n  border: none;\n}\n\n.project-button,\n.all-projects-button {\n  border: none;\n  border-radius: 4px;\n  background-color: rgb(114, 237, 216);\n  height: 20px;\n  width: 80px;\n}\n\n.all-projects-button {\n  background-color: rgb(80, 184, 167);\n}\n\n.complete-button {\n  border: none;\n  background-color: rgb(186, 237, 114);\n}\n\n.complete-todo {\n  text-decoration: line-through;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,wCAAwC;EACxC,gBAAgB;EAChB,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,aAAa;EACb,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,sBAAsB;EACtB,UAAU;EACV,oCAAoC;EACpC,aAAa;AACf;;AAEA;EACE,sBAAsB;EACtB,UAAU;EACV,oCAAoC;EACpC,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,eAAe;EACf,gBAAgB;AAClB;;AAEA;;EAEE,oCAAoC;AACtC;;AAEA;;EAEE,oCAAoC;AACtC;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,YAAY;AACd;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,oCAAoC;EACpC,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,6BAA6B;AAC/B",sourcesContent:['body {\n  margin: 20px 80px;\n  font-family: "Source Sans 3", sans-serif;\n  font-weight: 600;\n  background-color: rgb(220, 247, 234);\n}\n\n.header {\n  display: flex;\n  height: 100px;\n  font-size: 46px;\n  align-items: center;\n}\n\n.container {\n  display: flex;\n}\n\n.projects {\n  flex-direction: column;\n  width: 30%;\n  background-color: rgb(114, 237, 216);\n  padding: 40px;\n}\n\n.todos {\n  flex-direction: column;\n  width: 70%;\n  background-color: rgb(186, 237, 114);\n  padding: 40px;\n}\n\ninput {\n  border: none;\n  border-radius: 4px;\n}\n\n.new-project-invisible {\n  display: none;\n}\n\n.new-todo-invisible {\n  display: none;\n}\n\n.new-project-button,\n.new-todo-button {\n  height: 30px;\n  width: 30px;\n  border: none;\n  font-family: sans-serif;\n  font-size: 18px;\n  font-weight: 100;\n}\n\n.new-project-button,\n.delete-project-button {\n  background-color: rgb(114, 237, 216);\n}\n\n.new-todo-button,\n.delete-todo-button {\n  background-color: rgb(186, 237, 114);\n}\n\n.delete-project-button,\n.delete-todo-button {\n  width: 20px;\n  height: 20px;\n  border: none;\n}\n\n.project-button,\n.all-projects-button {\n  border: none;\n  border-radius: 4px;\n  background-color: rgb(114, 237, 216);\n  height: 20px;\n  width: 80px;\n}\n\n.all-projects-button {\n  background-color: rgb(80, 184, 167);\n}\n\n.complete-button {\n  border: none;\n  background-color: rgb(186, 237, 114);\n}\n\n.complete-todo {\n  text-decoration: line-through;\n}\n'],sourceRoot:""}]);const a=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&c[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},c=[],a=0;a<n.length;a++){var d=n[a],s=o.base?d[0]+o.base:d[0],l=i[s]||0,u="".concat(s," ").concat(l);i[s]=l+1;var A=t(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var f=r(p,o);o.byIndex=a,e.splice(a,0,{identifier:u,updater:f,references:1})}c.push(u)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<i.length;c++){var a=t(i[c]);e[a].references--}for(var d=o(n,r),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),c=t.n(i),a=t(565),d=t.n(a),s=t(216),l=t.n(s),u=t(589),A=t.n(u),p=t(426),f={};f.styleTagTransform=A(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;class b{constructor(n){this.projectTitle=n}}class C extends b{constructor(n,e,t,o,r){super(n),this.title=e,this.description=t,this.dueDate=o,this.priority=r}}const m=new b("All"),E=new b("Work"),h=new b("Study"),v=new b("Leisure");let g=[new C("Home","Do laundry","Black and color","21.04.2022","Medium"),new C("Work","Delete unecessary mail","Filter inboxes","31.04.2023"),new C("Study","Finish JS Course","Odin","31.05.2023"),new C("Leisure","Watch Loro film","On the TV screen","20.04.2023")],x=[m,E,h,v];const y=document.querySelector(".todos"),w=document.querySelector(".projects"),j=document.querySelector(".new-project"),k=document.querySelector(".new-todo"),B=document.querySelectorAll("input"),S=document.querySelector(".new-project-button");function L(){for(let n=0;n<x.length;n++){const e=document.createElement("div");e.classList.add("project-item"),e.dataset.index=`${n}`,e.textContent=x[n].projectTitle,w.appendChild(e),e.addEventListener("click",(()=>{}));const t=document.createElement("button");t.classList.add("delete-project-button"),t.textContent="üóëÔ∏è",e.appendChild(t),t.addEventListener("click",(()=>{const n=e.dataset.index;var t;t=n,x=x.filter((function(n){return n!==x[t]})),e.textContent=""}))}}function Y(){for(let n=0;n<g.length;n++){const e=document.createElement("div");e.classList.add("todo-item"),e.dataset.index=`${n}`,e.textContent=g[n].title,y.appendChild(e);const t=document.createElement("button");t.classList.add("delete-todo-button"),t.textContent="üóëÔ∏è",e.appendChild(t),t.addEventListener("click",(()=>{const n=e.dataset.index;var t;t=n,g=g.filter((function(n){return n!==g[t]})),e.textContent=""}));const o=document.createElement("button");o.classList.add("complete-button"),o.textContent="‚óªÔ∏è",e.appendChild(o),o.addEventListener("click",(()=>{const n=e.dataset.index;o.textContent="‚òëÔ∏è",n.classList.toggle("complete-todo")}))}}document.querySelector(".new-todo-button").addEventListener("click",(()=>{k.classList.remove("new-todo-invisible")})),S.addEventListener("click",(()=>{j.classList.remove("new-project-invisible")})),j.addEventListener("submit",(function(n){n.preventDefault();const e=document.querySelector(".project-title").value,t=document.createElement("div");if(t.classList.add("project-item"),""!==e){w.appendChild(t),function(n){const e=new b(n);x.push(e)}(e);for(let n=0;n<B.length;n++)B[n].value="";j.classList.add("new-project-invisible"),L()}})),k.addEventListener("submit",(function(n){n.preventDefault();const e=document.querySelector("#project-list").value,t=document.querySelector(".todo-title").value,o=document.querySelector(".todo-description").value,r=document.querySelector(".todo-due-date").value,i=document.querySelector("#todo-priority").checked,c=document.createElement("div");if(c.classList.add("todo-item"),""!==t){y.appendChild(c),function(n,e,t,o,r,i){const c=new C(n,e,t,o,r,void 0);g.push(c)}(e,t,o,r,i);for(let n=0;n<B.length;n++)B[n].value="";k.classList.add("new-todo-invisible"),Y()}})),Y(),L()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,